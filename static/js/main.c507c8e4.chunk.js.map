{"version":3,"sources":["assets/img/read.svg","assets/img/unread.svg","assets/img/wave.svg","assets/img/play.svg","assets/img/pause.svg","components/Button/index.js","components/Block/index.js","utils/helpers/validateField.js","utils/helpers/openNotification.js","utils/helpers/isAudio.js","components/Message/index.js","components/DialogItem/index.js","components/Time/index.js","components/IconReaded/index.js","components/Dialogs/index.js","components/AudioMessage/index.js","utils/helpers/convertCurrentTime.js","components/Avatar/index.js","utils/helpers/generateAvatarFromHash.js","components/Status/index.js","components/ChatInput/index.js","components/Messages/index.js","components/FormField/index.jsx","core/axios.js","utils/api/dialogs.js","utils/api/messages.js","utils/api/user.js","utils/api/files.js","core/socket.js","redux/actions/dialogs.js","redux/actions/messages.js","redux/actions/user.js","redux/actions/attachments.js","containers/Dialogs.js","containers/Messages.js","containers/ChatInput.js","containers/Status.js","containers/Sidebar.js","components/Sidebar/index.js","components/UploadFiles/index.js","modules/LoginForm/components/LoginForm.jsx","utils/validate.js","modules/LoginForm/containers/LoginForm.js","modules/RegisterForm/components/RegisterForm.jsx","modules/RegisterForm/containers/RegisterForm.js","pages/Auth/components/CheckEmailInfo.jsx","pages/Auth/index.jsx","pages/Home/index.jsx","App.js","redux/reducers/dialogs.js","redux/reducers/messages.js","redux/reducers/user.js","redux/reducers/attachments.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Button","props","className","classNames","size","Block","children","key","touched","errors","text","type","title","duration","notification","message","description","attachments","file","length","ext","Message","user","date","isMe","read","isTyping","onRemoveMessage","setPreviewImage","isAudio","isReaded","content","onClick","trigger","shape","icon","reactStringReplace","match","i","emoji","set","map","item","_id","url","style","color","fontSize","src","alt","filename","audioSrc","renderAttachment","defaultProps","DialogItem","created_at","currentDialogId","lastMessage","userId","to","isOnline","fullname","Date","createdAt","isToday","format","renderLastMessage","Time","distanceInWordsToNow","addSuffix","locale","ruLocale","propTypes","PropTypes","object","IconReaded","readSvg","unreadSvg","Dialogs","items","onSearch","inputValue","Search","value","placeholder","onChange","e","target","orderBy","author","image","Empty","PRESENTED_IMAGE_SIMPLE","AudioMessage","audioElem","useRef","useState","isPlaying","setIsPlaying","progress","setProgress","currentTime","setCurrentTime","useEffect","current","volume","addEventListener","ref","preload","width","pause","play","pauseSvg","playSvg","waveSvg","number","mins","Math","floor","secs","toFixed","convertCurrentTime","Avatar","avatar","hash","substr","split","char","charCodeAt","r","g","b","tinycolor","lighten","saturate","toHexString","colorLighten","generateAvatarFromHash","firstChar","toUpperCase","background","Status","online","ChatInput","emojiPickerVisible","setValue","toggleEmojiPicker","addEmoji","handleSendMessage","sendMessage","onSelectFiles","onRecord","isRecording","onHideRecording","isLoading","removeAttachment","onSelect","emojiTag","onKeyUp","onFiles","containerProps","uploadProps","accept","multiple","Messages","blockRef","blockHeight","previewImage","partner","height","tip","bind","visible","onCancel","footer","FormField","name","handleChange","handleBlur","values","Item","validateStatus","validateField","help","hasFeedback","id","prefix","onBlur","axios","defaults","baseURL","headers","common","window","localStorage","token","get","post","delete","dialogId","dialog_id","postData","query","formData","FormData","append","socket","io","actions","setDialogs","payload","setCurrentDialogId","dispatch","emit","fetchDialogs","dialogsApi","then","data","setMessages","addMessage","getState","dialogs","dialog","fetchSendMessage","messagesApi","setIsLoading","bool","removeMessageById","confirm","catch","fetchMessages","setUserData","setIsAuth","fetchUserData","userApi","err","console","log","response","status","fetchUserLogin","openNotification","fetchUserRegister","setAttachments","connect","dialogsActions","filtred","setFiltredItems","onChangeInput","filter","toLowerCase","indexOf","on","removeListener","messages","currentDialog","find","messagesActions","setBlockHeight","setIsTyping","messagesRef","typingTimeoutId","toggleIsTyping","clearInterval","setTimeout","onNewMessage","scrollTo","scrollHeight","attachmentsActions","navigator","getUserMedia","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","setShowEmojiPicker","setIsRecording","mediaRecorder","setMediaRecorder","setLoading","files","a","uploaded","uid","round","random","filesApi","onRecording","stream","recorder","MediaRecorder","start","onstart","onstop","ondataavailable","File","sendAudio","onError","audioId","colons","trim","keyCode","stop","audio","currentDialogObj","SidebarContainer","setVisible","setInputValue","messageText","setMessagaText","users","setUsers","selectedUserId","setSelectedUserId","onClose","onShow","onSelectUser","onModalOk","onChangeTextArea","Option","Select","TextArea","Input","Sidebar","options","disabled","loading","label","notFoundContent","defaultActiveFirstOption","showArrow","filterOption","showSearch","autosize","minRows","maxRows","getBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","UploadFiles","previewVisible","fileList","state","setState","handlePreview","preview","originFileObj","action","listType","onPreview","onRemove","LoginForm","handleSubmit","isSubmitting","onSubmit","email","password","htmlType","isAuth","rules","test","password_2","Object","keys","forEach","LoginFormContainer","withFormik","mapPropsToValues","validate","validateForm","setSubmitting","history","push","displayName","userActions","RegisterForm","RegisterFormContainer","CheckEmailInfo","location","verified","setVerified","search","info","renderTextInfo","display","justifyContent","subTitle","extra","Auth","exact","path","component","React","Component","compose","withRouter","pathname","pop","render","initialState","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middlewares","thunkMiddleware","enhancer","applyMiddleware","store","createStore","rootReducer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c507c8e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/read.2da46147.svg\";","module.exports = __webpack_public_path__ + \"static/media/unread.1456f013.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave.86c27fea.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.65f03140.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.a61933e8.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button as BaseButton } from 'antd'; // из библиотеки типо бутстрап взяли готовую кнопку, работает благодаря index.scss \r\nimport classNames from 'classnames';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = props => { \r\n    // props.className - присвоит родительский класс\r\n    // {...props} лучше ставить вначале, чтоб не перетирать добавленные атрибуты, кот. стоят вместе\r\n    return (\r\n        <div>\r\n            <BaseButton {...props} className={classNames('button', props.className, {\r\n                \"button--large\": props.size === 'large'\r\n            })} ></BaseButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react'\r\nimport classNames from 'classnames';\r\n\r\nimport './Block.scss';\r\n\r\nconst Block = ({ children, className }) => { // ({ children }) с помощью деструктуризации вытаскиваем из props.children\r\n    return (\r\n        <div className={classNames(\"block\", className)}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default Block;\r\n","export default (key, touched, errors) => {\r\n    if (touched[key]) {\r\n        if (errors[key]) {\r\n            return \"error\";\r\n        } else {\r\n            return \"success\";\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n};\r\n","import { notification } from \"antd\";\r\n\r\nexport default ({ text, type = \"info\", title, duration = 3 }) =>\r\n  notification[type]({\r\n    message: title,\r\n    description: text,\r\n    duration: duration\r\n  });\r\n","export default attachments => {\r\n    if (!attachments) {\r\n      return false;\r\n    }\r\n    const file = attachments[0];\r\n    return attachments.length && file.ext === \"webm\";\r\n  };\r\n  ","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Popover, Button, Icon } from \"antd\";\r\nimport reactStringReplace from \"react-string-replace\";\r\nimport { Emoji } from \"emoji-mart\";\r\n\r\nimport { Time, IconReaded, Avatar, AudioMessage } from \"../\";\r\nimport { isAudio } from \"../../utils/helpers\";\r\n\r\nimport \"./Message.scss\";\r\n\r\nconst Message = ({\r\n  user,\r\n  text,\r\n  date,\r\n  isMe,\r\n  read,\r\n  attachments,\r\n  isTyping,\r\n  onRemoveMessage,\r\n  setPreviewImage\r\n}) => {\r\n  const renderAttachment = item => {\r\n    if (item.ext !== \"webm\") {\r\n      return (\r\n        <div\r\n          key={item._id}\r\n          onClick={() => setPreviewImage(item.url)}\r\n          className=\"message__attachments-item\"\r\n        >\r\n          <div className=\"message__attachments-item-overlay\">\r\n            <Icon type=\"eye\" style={{ color: \"white\", fontSize: 18 }} />\r\n          </div>\r\n          <img src={item.url} alt={item.filename} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <AudioMessage key={item._id} audioSrc={item.url} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"message\", {\r\n        \"message--isme\": isMe,\r\n        \"message--is-typing\": isTyping,\r\n        \"message--is-audio\": isAudio(attachments),\r\n        \"message--image\":\r\n          !isAudio(attachments) &&\r\n          attachments &&\r\n          attachments.length === 1 &&\r\n          !text\r\n      })}\r\n    >\r\n      <div className=\"message__content\">\r\n        <IconReaded isMe={isMe} isReaded={read} />\r\n        <Popover\r\n          content={\r\n            <div>\r\n              <Button onClick={onRemoveMessage}>Удалить сообщение</Button>\r\n            </div>\r\n          }\r\n          trigger=\"click\"\r\n        >\r\n          <div className=\"message__icon-actions\">\r\n            <Button type=\"link\" shape=\"circle\" icon=\"ellipsis\" />\r\n          </div>\r\n        </Popover>\r\n        <div className=\"message__avatar\">\r\n          <Avatar user={user} />\r\n        </div>\r\n        <div>\r\n          <div className=\"message__info\">\r\n            {(text || isTyping) && ( // если есть текст сообщения или он печатается или аудио есть, то бабл (оболочка сообщения) - есть\r\n              <div className=\"message__bubble\">\r\n                {text && (\r\n                  <p className=\"message__text\">\r\n                    {reactStringReplace(text, /:(.+?):/g, (match, i) => (\r\n                      <Emoji key={i} emoji={match} set=\"apple\" size={16}></Emoji>\r\n                    ))}\r\n                  </p>\r\n                )}\r\n                {isTyping && (\r\n                  <div className=\"message__typing\">\r\n                    <span />\r\n                    <span />\r\n                    <span />\r\n                  </div>\r\n                )}\r\n                {false && <AudioMessage audioSrc={null} />}\r\n              </div>\r\n            )}\r\n\r\n            {attachments && (\r\n              <div className=\"message__attachments\">\r\n                {attachments.map(item => renderAttachment(item))}\r\n              </div>\r\n            )}\r\n\r\n            {date && (\r\n              <span className=\"message__date\">\r\n                <Time date={date} />\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  user: {}\r\n};\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  text: PropTypes.string,\r\n  date: PropTypes.object,\r\n  user: PropTypes.object,\r\n  attachments: PropTypes.array,\r\n  isTyping: PropTypes.bool, // вводит ли человек текст или нет\r\n  isMe: PropTypes.bool,\r\n  isReaded: PropTypes.bool,\r\n  audio: PropTypes.string\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport className from \"classnames\";\r\nimport format from \"date-fns/format\"; // Return the formatted date string in the given format.\r\nimport isToday from \"date-fns/isToday\"; // Is the given date today?\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { IconReaded, Avatar } from \"../\";\r\n\r\nconst getMessageTime = created_at => {\r\n  if (isToday(created_at)) {\r\n    return format(created_at, \"HH:mm\");\r\n  } else {\r\n    return format(created_at, \"dd.MM.yyyy\");\r\n  }\r\n};\r\n\r\nconst renderLastMessage = (message, userId) => {\r\n  let text = '';\r\n  if (!message.text && message.attachments.length) {\r\n    text = 'прикрепленный файл';\r\n  } else {\r\n    text = message.text;\r\n  }\r\n\r\n  return `${message.user._id === userId ? 'Вы: ' : ''}${text}`;\r\n};\r\n\r\nconst DialogItem = ({\r\n  _id,\r\n  isMe,\r\n  currentDialogId,\r\n  lastMessage,\r\n  userId\r\n}) => (\r\n  <Link to={`/dialog/${_id}`}>\r\n  <div\r\n    className={className(\"dialogs__item\", {\r\n      \"dialogs__item--online\": lastMessage.user.isOnline,\r\n      \"dialogs__item--selected\": currentDialogId === _id\r\n    })}\r\n  >\r\n    <div className=\"dialogs__item-avatar\">\r\n      <Avatar user={lastMessage.user} />\r\n    </div>\r\n    <div className=\"dialogs__item-info\">\r\n      <div className=\"dialogs__item-info-top\">\r\n        <b>{lastMessage.user.fullname}</b>\r\n        <span>{getMessageTime(new Date(lastMessage.createdAt))}</span>\r\n      </div>\r\n      <div className=\"dialogs__item-info-bottom\">\r\n        <p>{renderLastMessage(lastMessage, userId)}</p>\r\n        {isMe && <IconReaded isMe={isMe} isReaded={lastMessage.read} />}\r\n        {/* {read > 0 && (\r\n          <div className=\"dialogs__item-info-bottom-count\">\r\n            {read > 9 ? \"+9\" : read}\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </Link>\r\n);\r\n\r\nexport default DialogItem;\r\n","import PropTypes from \"prop-types\";\r\nimport distanceInWordsToNow from \"date-fns/formatDistanceToNow\";\r\nimport ruLocale from \"date-fns/locale/ru\";\r\n\r\nconst Time = ({ date }) => (\r\n  distanceInWordsToNow(date, {\r\n    addSuffix: true,\r\n    locale: ruLocale\r\n  })\r\n);\r\n\r\nTime.propTypes = {\r\n  date: PropTypes.object\r\n};\r\n\r\nexport default Time;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport readSvg from \"../../assets/img/read.svg\";\r\nimport unreadSvg from \"../../assets/img/unread.svg\";\r\n\r\nconst IconReaded = ({ isMe, isReaded }) =>\r\n  (isMe && // если это автор сообщения и сообщение прочитано, то 2 ковычки возле сообщения, не прочитано - одни\r\n    (isReaded ? (\r\n      <img className=\"message__icon-readed\" src={readSvg} alt=\"Readed icon\" />\r\n    ) : (\r\n      <img\r\n        className=\"message__icon-readed message__icon-readed--no\"\r\n        src={unreadSvg}\r\n        alt=\"No readed icon\"\r\n      />\r\n    ))) ||\r\n  null;\r\n\r\nIconReaded.propTypes = {\r\n  isMe: PropTypes.bool,\r\n  isReaded: PropTypes.bool\r\n};\r\n\r\nexport default IconReaded;","import React from \"react\";\r\nimport orderBy from \"lodash/orderBy\";\r\nimport { Input, Empty } from \"antd\";\r\n\r\nimport { DialogItem } from \"../\";\r\n\r\nimport \"./Dialogs.scss\";\r\n\r\nconst Dialogs = ({ items, userId, onSearch, inputValue, currentDialogId }) => (\r\n  <div className=\"dialogs\">\r\n    <div className=\"dialogs__search\">\r\n      <Input.Search\r\n        value={inputValue}\r\n        placeholder=\"Поиск среди контактов\"\r\n        onChange={e => onSearch(e.target.value)}\r\n      />\r\n    </div>\r\n    {items.length ? orderBy(items, [\"createdAt\"], [\"desc\"]).map((\r\n      item // orderBy сортирует объекты по конкретному полю (можно несколько)\r\n    ) => (\r\n      <DialogItem\r\n        key={item._id}\r\n        // проверка id из бд и id из redux state для проставки галочки прочтения\r\n        isMe={item.author._id === userId}\r\n        currentDialogId={currentDialogId}\r\n        userId={userId}\r\n        {...item}\r\n      />\r\n    )) : <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"Ничего не найдено\" />}\r\n  </div>\r\n);\r\n\r\nexport default Dialogs;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport { convertCurrentTime } from \"../../utils/helpers\";\r\nimport waveSvg from \"../../assets/img/wave.svg\";\r\nimport playSvg from \"../../assets/img/play.svg\";\r\nimport pauseSvg from \"../../assets/img/pause.svg\";\r\n\r\nconst AudioMessage = ({ audioSrc }) => {\r\n  const audioElem = useRef(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    audioElem.current.volume = \"0.1\";\r\n    audioElem.current.addEventListener(\r\n      \"playing\",\r\n      () => {\r\n        setIsPlaying(true);\r\n      },\r\n      false\r\n    );\r\n\r\n    audioElem.current.addEventListener(\r\n      \"ended\",\r\n      () => {\r\n        setIsPlaying(false);\r\n        setProgress(0);\r\n        setCurrentTime(0);\r\n      },\r\n      false\r\n    );\r\n\r\n    audioElem.current.addEventListener(\r\n      \"pause\",\r\n      () => {\r\n        setIsPlaying(false);\r\n      },\r\n      false\r\n    );\r\n\r\n    audioElem.current.addEventListener(\"timeupdate\", () => {\r\n      const duration = (audioElem.current && audioElem.current.duration) || 0; // общее время аудио\r\n      setCurrentTime(audioElem.current.currentTime);\r\n      setProgress((audioElem.current.currentTime / duration) * 100);\r\n    });\r\n  }, []);\r\n\r\n  const togglePlay = () => {\r\n    if (!isPlaying) {\r\n      audioElem.current.play();\r\n    } else {\r\n      audioElem.current.pause();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"message__audio\">\r\n      <audio ref={audioElem} src={audioSrc} preload=\"auto\"></audio>\r\n      <div\r\n        className=\"message__audio-progress\"\r\n        style={{ width: progress + \"40%\" }}\r\n      ></div>\r\n      <div className=\"message__audio-info\">\r\n        <div className=\"message__audio-btn\">\r\n          <button onClick={togglePlay}>\r\n            {isPlaying ? (\r\n              <img src={pauseSvg} alt=\"Pause svg\" />\r\n            ) : (\r\n              <img src={playSvg} alt=\"Play svg\" />\r\n            )}\r\n          </button>\r\n        </div>\r\n        <div className=\"message__audio-wave\">\r\n          <img src={waveSvg} alt=\"Wave svg\" />\r\n        </div>\r\n        <span className=\"message__audio-duration\">\r\n          {convertCurrentTime(currentTime)}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioMessage;\r\n","export default number => {\r\n  const mins = Math.floor(number / 60);\r\n  const secs = (number % 60).toFixed();\r\n  return `${mins < 10 ? \"0\" : \"\"}${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { generateAvatarFromHash } from \"../../utils/helpers\";\r\n\r\nimport \"./Avatar.scss\";\r\n\r\nconst Avatar = ({ user }) => {\r\n  if (user.avatar) {\r\n    return (\r\n      <img\r\n        className=\"avatar\"\r\n        src={user.avatar}\r\n        alt={`Avatar ${user.fullname}`}\r\n      />\r\n    );\r\n  } else {\r\n    const { color, colorLighten } = generateAvatarFromHash(user._id); // {color: \"#90443c\", colorLighten: \"#d7665b\"}\r\n    const firstChar = user.fullname[0].toUpperCase();\r\n    return (\r\n      <div\r\n        style={{\r\n          background: `linear-gradient(135deg, ${color} 0%, ${colorLighten} 96.52%)`\r\n        }}\r\n        className=\"avatar avatar--symbol\"\r\n      >\r\n        {firstChar}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nAvatar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Avatar;\r\n","import tinycolor from \"tinycolor2\";\r\n\r\nconst getCorrectIndex = number => {\r\n  if (number > 255) {\r\n    return 255;\r\n  }\r\n  if (number < 0) {\r\n    return 0;\r\n  }\r\n  return number > 255 ? 255 : number < 0 ? 0 : number;\r\n};\r\n\r\n// hash - 'd95b28d46ebc689284bb1e90692f8d4'\r\nexport default hash => {\r\n  const [r, g, b] = hash \r\n    .substr(0, 3)\r\n    .split(\"\")\r\n    .map(char => getCorrectIndex(char.charCodeAt(0)));\r\n\r\n    return {\r\n      color: tinycolor({ r, g, b }) // {r: 100, g: 57, b: 53}\r\n        .lighten(10)\r\n        .saturate(10)\r\n        .toHexString(),\r\n      colorLighten: tinycolor({ r, g, b })\r\n        .lighten(30)\r\n        .saturate(30)\r\n        .toHexString()\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Button } from \"antd\";\r\n\r\nimport \"./Status.scss\";\r\n\r\nconst Status = ({ online, fullname }) => (\r\n  <div className=\"chat__dialog-header\">\r\n    <div />\r\n    <div className=\"chat__dialog-header-center\">\r\n      <b className=\"chat__dialog-header-username\">{fullname}</b>\r\n      <div className=\"chat__dialog-header-status\">\r\n        <span className={classNames(\"status\", { \"status--online\": online })}>\r\n          {online ? \"онлан\" : \"офлайн\"}\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <Button type=\"link\" shape=\"circle\" icon=\"ellipsis\" />\r\n  </div>\r\n);\r\n\r\nStatus.propTypes = {\r\n  online: PropTypes.bool\r\n};\r\n\r\nexport default Status;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Input } from \"antd\";\r\nimport { UploadField } from \"@navjobs/upload\"; // для загрузки фото https://github.com/ConstructionJobs/upload\r\nimport { Picker } from \"emoji-mart\";\r\n\r\nimport { UploadFiles } from \"../../components\";\r\nimport \"./ChatInput.scss\";\r\n\r\nconst ChatInput = ({\r\n  emojiPickerVisible,\r\n  value,\r\n  setValue,\r\n  toggleEmojiPicker,\r\n  addEmoji,\r\n  handleSendMessage,\r\n  sendMessage,\r\n  attachments,\r\n  onSelectFiles,\r\n  onRecord,\r\n  isRecording,\r\n  onHideRecording,\r\n  isLoading,\r\n  removeAttachment\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"chat-input\">\r\n        <div>\r\n          <div className=\"chat-input__smile-btn\">\r\n            {emojiPickerVisible && (\r\n              <div className=\"chat-input__emoji-picker\">\r\n                <Picker onSelect={emojiTag => addEmoji(emojiTag)} set=\"apple\" />\r\n              </div>\r\n            )}\r\n            <Button\r\n              onClick={toggleEmojiPicker}\r\n              type=\"link\"\r\n              shape=\"circle\"\r\n              icon=\"smile\"\r\n            />\r\n          </div>\r\n          {isRecording ? (\r\n            <div className=\"chat-input__record-status\">\r\n              <i className=\"chat-input__record-status-bubble\"></i>\r\n              Recording...\r\n              <Button\r\n                onClick={onHideRecording}\r\n                type=\"link\"\r\n                shape=\"circle\"\r\n                icon=\"close\"\r\n                className=\"stop-recording\"\r\n              />\r\n            </div>\r\n          ) : (\r\n            <Input\r\n              onChange={e => setValue(e.target.value)}\r\n              value={value}\r\n              onKeyUp={handleSendMessage}\r\n              size=\"large\"\r\n              placeholder=\"Введите текст сообщения…\"\r\n            />\r\n          )}\r\n          <div className=\"chat-input__actions\">\r\n            <UploadField\r\n              onFiles={onSelectFiles}\r\n              containerProps={{\r\n                className: \"chat-input__actions-upload-btn\"\r\n              }}\r\n              uploadProps={{\r\n                accept: \".jpg, .jpeg, .png, .gif, .bmp\",\r\n                multiple: \"multiple\" // для загрузки больше чем 1\r\n              }}\r\n              multiple // для загрузки больше чем 1\r\n            >\r\n              <Button type=\"link\" shape=\"circle\" icon=\"camera\" />\r\n            </UploadField>\r\n            {isLoading ? (\r\n              <Button type=\"link\" shape=\"circle\" icon=\"loading\" />\r\n            ) : isRecording || value || attachments.length ? (\r\n              <Button\r\n                onClick={sendMessage}\r\n                type=\"link\"\r\n                shape=\"circle\"\r\n                icon=\"check-circle\"\r\n              />\r\n            ) : (\r\n              <div className=\"chat-input__record-btn\">\r\n                <Button\r\n                  onClick={onRecord}\r\n                  type=\"link\"\r\n                  shape=\"circle\"\r\n                  icon=\"audio\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {attachments.length > 0 && (\r\n          <div className=\"chat-input__attachments\">\r\n            <UploadFiles\r\n              attachments={attachments}\r\n              removeAttachment={removeAttachment}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nChatInput.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ChatInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Empty, Spin, Modal } from \"antd\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Messages.scss\";\r\n\r\nimport { Message } from \"../../components\";\r\n\r\nconst Messages = ({\r\n  isLoading,\r\n  items,\r\n  blockRef,\r\n  user,\r\n  onRemoveMessage,\r\n  blockHeight,\r\n  previewImage,\r\n  setPreviewImage,\r\n  partner,\r\n  isTyping\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"chat__dialog-messages\"\r\n      style={{ height: `calc(100% - ${blockHeight}px)` }}\r\n    >\r\n      <div\r\n        ref={blockRef} // т.к. блок с классом messages имеет scroll, то им можно манипулировать\r\n        className={classNames(\"messages\", { \"messages--loading\": isLoading })}\r\n      >\r\n        {isLoading && !user ? ( // загрузка идёт (true) и сообщений нет - идёт загрузка\r\n          <Spin size=\"large\" tip=\"Загрузка сообщений...\"></Spin>\r\n        ) : items && !isLoading ? ( // если загрузка не идёт (false) и есть сообщения\r\n          items.length > 0 ? (\r\n            items.map(item => {\r\n              return (\r\n                <Message\r\n                  key={item._id}\r\n                  isMe={user._id === item.user._id}\r\n                  onRemoveMessage={onRemoveMessage.bind(this, item._id)}\r\n                  setPreviewImage={setPreviewImage}\r\n                  {...item}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <Empty description=\"Диалог пуст\" />\r\n          )\r\n        ) : (\r\n          // если нет сообщений\r\n          <Empty description=\"Откройте диалог\" />\r\n        )}\r\n        {isTyping && <Message isTyping={true} user={partner} />}\r\n        <Modal\r\n          visible={!!previewImage}\r\n          onCancel={() => setPreviewImage(null)}\r\n          footer={null}\r\n        >\r\n          <img style={{ width: \"100%\" }} src={previewImage} alt=\"Preview\"></img>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessages.propTypes = {\r\n  items: PropTypes.array\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport { Form, Icon, Input } from \"antd\";\r\n\r\nimport { validateField } from \"../../utils/helpers\";\r\n\r\nconst FormField = ({\r\n  name,\r\n  placeholder,\r\n  icon,\r\n  type,\r\n  handleChange,\r\n  handleBlur,\r\n  touched,\r\n  errors,\r\n  values\r\n}) => {\r\n  return (\r\n    <Form.Item\r\n      validateStatus={validateField(name, touched, errors)}\r\n      help={!touched[name] ? \"\" : errors[name]}\r\n      hasFeedback\r\n    >\r\n      <Input\r\n        id={name}\r\n        prefix={<Icon type={icon} style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n        size=\"large\"\r\n        placeholder={placeholder}\r\n        value={values[name]}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        type={type}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://react-nodejs-mongodb-chat.herokuapp.com/';\r\naxios.defaults.headers.common[\"token\"] = window.localStorage.token;\r\n\r\nwindow.axios = axios;\r\n\r\nexport default axios;","import { axios } from '../../core';\r\n\r\nexport default {\r\n    getAll: () => axios.get('/dialogs'),\r\n    create: ({ partner, text }) => axios.post(\"/dialogs\", { partner, text })\r\n}","import { axios } from \"../../core\";\r\n\r\nexport default {\r\n  getAllByDialogId: id => axios.get(`/messages?dialog=${id}`),\r\n  removeById: id => axios.delete(\"/messages?id=\" + id),\r\n  send: (text, dialogId, attachments) =>\r\n    axios.post(\"/messages\", {\r\n      text,\r\n      dialog_id: dialogId,\r\n      attachments\r\n    }),\r\n};","import { axios } from \"../../core\";\r\n\r\nexport default {\r\n  signIn: postData => axios.post(\"/user/login\", postData),\r\n  signUp: postData => axios.post(\"/user/registration\", postData),\r\n  verifyHash: hash => axios.get(\"/user/verify?hash=\" + hash),\r\n  getMe: () => axios.get(\"/user/me\"),\r\n  findUsers: query => axios.get(\"/user/find?query=\" + query),\r\n};\r\n","import { axios } from \"../../core\";\r\n\r\nexport default {\r\n  upload: file => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    return axios.post(\"/files\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\"\r\n      }\r\n    });\r\n  }\r\n};\r\n","import io from \"socket.io-client\";\r\n\r\nconst socket = io('https://react-nodejs-mongodb-chat.herokuapp.com/');\r\n\r\nexport default socket;\r\n","import { dialogsApi } from \"../../utils/api\";\r\nimport socket from \"../../core/socket\";\r\n\r\nconst actions = {\r\n  setDialogs: items => ({\r\n    type: \"DIALOGS:SET_ITEMS\",\r\n    payload: items\r\n  }),\r\n  setCurrentDialogId: id => dispatch => {\r\n    socket.emit(\"DIALOGS:JOIN\", id);\r\n    dispatch({ type: \"DIALOGS:SET_CURRENT_DIALOG_ID\", payload: id });\r\n  },\r\n  fetchDialogs: () => dispatch => {\r\n    dialogsApi.getAll().then(({ data }) => {\r\n      dispatch(actions.setDialogs(data));\r\n    });\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import { messagesApi } from \"../../utils/api\";\r\n\r\nconst actions = {\r\n  setMessages: items => ({\r\n    type: \"MESSAGES:SET_ITEMS\",\r\n    payload: items\r\n  }),\r\n  addMessage: message => (dispatch, getState) => {\r\n    const { dialogs } = getState();\r\n    const { currentDialogId } = dialogs;\r\n\r\n    if (currentDialogId === message.dialog._id) {\r\n      dispatch({\r\n        type: \"MESSAGES:ADD_MESSAGE\",\r\n        payload: message\r\n      });\r\n    }\r\n  },\r\n  fetchSendMessage: ({text, dialogId, attachments}) => dispatch => {\r\n    return messagesApi.send(text, dialogId, attachments);\r\n  },\r\n  setIsLoading: bool => ({\r\n    type: \"MESSAGES:SET_IS_LOADING\",\r\n    payload: bool\r\n  }),\r\n  removeMessageById: id => dispatch => {\r\n    if (window.confirm(\"Вы действительно хотите удалить сообщение?\")) {\r\n      messagesApi\r\n        .removeById(id)\r\n        .then(() => {\r\n          dispatch({\r\n            type: \"MESSAGES:REMOVE_MESSAGE\",\r\n            payload: id\r\n          });\r\n        })\r\n        .catch(() => {\r\n          dispatch(actions.setIsLoading(false));\r\n        });\r\n    }\r\n  },\r\n  fetchMessages: dialogId => dispatch => {\r\n    dispatch(actions.setIsLoading(true));\r\n    messagesApi\r\n      .getAllByDialogId(dialogId)\r\n      .then(({ data }) => {\r\n        dispatch(actions.setMessages(data));\r\n      })\r\n      .catch(() => {\r\n        dispatch(actions.setIsLoading(false));\r\n      });\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import { openNotification } from \"../../utils/helpers\";\r\nimport { userApi } from \"../../utils/api\";\r\n\r\nconst actions = {\r\n  setUserData: data => ({\r\n    type: \"USER:SET_DATA\",\r\n    payload: data\r\n  }),\r\n  setIsAuth: bool => ({\r\n    type: \"USER:SET_IS_AUTH\",\r\n    payload: bool\r\n  }),\r\n  fetchUserData: () => dispatch => {\r\n    userApi\r\n      .getMe()\r\n      .then(({ data }) => {\r\n        dispatch(actions.setUserData(data));\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        if (err.response.status === 403) {\r\n          dispatch(actions.setIsAuth(false));\r\n          delete window.localStorage.token;\r\n        }\r\n      });\r\n  },\r\n  fetchUserLogin: postData => dispatch => {\r\n    return userApi\r\n      .signIn(postData)\r\n      .then(({ data }) => {\r\n        const { status, token } = data;\r\n        if (status === \"error\") {\r\n          openNotification({\r\n            title: \"Ошибка при авторизации!\",\r\n            text: \"Неверный логин или пароль.\",\r\n            type: \"error\"\r\n          });\r\n        } else {\r\n          openNotification({\r\n            title: \"Отлично!\",\r\n            text: \"Авторизация успешна.\",\r\n            type: \"success\"\r\n          });\r\n\r\n          window.axios.defaults.headers.common[\"token\"] = token; // записываем токен в header axios для последующих запросов с клиента\r\n          window.localStorage[\"token\"] = token;\r\n\r\n          dispatch(actions.fetchUserData());\r\n          dispatch(actions.setIsAuth(true));\r\n        }\r\n\r\n        return data;\r\n      })\r\n      .catch(({ response }) => {\r\n        if (response.status === 403) {\r\n          openNotification({\r\n            title: \"Ошибка при авторизации\",\r\n            text: \"Неверный логин или пароль\",\r\n            type: \"error\"\r\n          });\r\n        } else if(response.status === 404) {\r\n          openNotification({\r\n            title: \"Ошибка при авторизации\",\r\n            text: \"Пользователь не найден\",\r\n            type: \"error\"\r\n          });\r\n        }\r\n      });\r\n  },\r\n  fetchUserRegister: postData => dispatch => {\r\n    return userApi.signUp(postData).then(({ data }) => {\r\n      return data;\r\n    });\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","const actions = {\r\n  setAttachments: items => ({\r\n    type: \"ATTACHMENTS:SET_ITEMS\",\r\n    payload: items\r\n  }),\r\n  removeAttachment: file => ({\r\n    type: \"ATTACHMENTS:REMOVE_ITEM\",\r\n    payload: file\r\n  })\r\n};\r\n\r\nexport default actions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { dialogsActions } from \"../redux/actions\";\r\nimport { Dialogs as BaseDialogs } from \"../components\";\r\n\r\nimport socket from \"../core/socket\";\r\n\r\nconst Dialogs = ({ items, user, currentDialogId, fetchDialogs }) => {\r\n  const [inputValue, setValue] = useState(\"\"); // state для отображения значения input-a ввода\r\n  const [filtred, setFiltredItems] = useState([...items]); // state для фильтрации значений из массива\r\n\r\n  const onChangeInput = (value = \"\") => {\r\n    setFiltredItems(\r\n      items.filter(\r\n        dialog =>\r\n          dialog.author.fullname.toLowerCase().indexOf(value.toLowerCase()) >=\r\n            0 ||\r\n          dialog.partner.fullname.toLowerCase().indexOf(value.toLowerCase()) >=\r\n            0\r\n      )\r\n    );\r\n\r\n    setValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (items.length) {\r\n      onChangeInput();\r\n    }\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    fetchDialogs();\r\n\r\n    socket.on(\"SERVER:DIALOG_CREATED\", fetchDialogs);\r\n    socket.on(\"SERVER:NEW_MESSAGE\", fetchDialogs);\r\n    return () => {\r\n      socket.removeListener(\"SERVER:DIALOG_CREATED\", fetchDialogs);\r\n      socket.removeListener(\"SERVER:NEW_MESSAGE\", fetchDialogs);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <BaseDialogs\r\n      userId={user && user._id}\r\n      items={filtred}\r\n      onSearch={onChangeInput}\r\n      inputValue={inputValue}\r\n      currentDialogId={currentDialogId}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ dialogs, user }) => ({ items: dialogs.items, user: user.data }),\r\n  dialogsActions\r\n)(Dialogs);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport find from \"lodash/find\";\r\nimport { Empty } from \"antd\";\r\n\r\nimport socket from \"../core/socket\";\r\nimport { messagesActions } from \"../redux/actions\";\r\n\r\nimport { Messages as BaseMessages } from \"../components\";\r\n\r\nconst Messages = ({\r\n  currentDialog,\r\n  currentDialogId,\r\n  fetchMessages,\r\n  addMessage,\r\n  items,\r\n  isLoading,\r\n  user,\r\n  removeMessageById,\r\n  attachments\r\n}) => {\r\n  const [blockHeight, setBlockHeight] = useState(135);\r\n  const [previewImage, setPreviewImage] = useState(null);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesRef = useRef(null);\r\n  let typingTimeoutId = null;\r\n\r\n  const toggleIsTyping = () => {\r\n    setIsTyping(true);\r\n    clearInterval(typingTimeoutId);\r\n    typingTimeoutId = setTimeout(() => {\r\n      setIsTyping(false);\r\n    }, 500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"DIALOGS:TYPING\", toggleIsTyping);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (attachments.length) {\r\n      setBlockHeight(245);\r\n    } else {\r\n      setBlockHeight(135);\r\n    }\r\n  }, [attachments]);\r\n\r\n  const onNewMessage = data => {\r\n    addMessage(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentDialogId) {\r\n      fetchMessages(currentDialogId);\r\n    }\r\n\r\n    socket.on(\"SERVER:NEW_MESSAGE\", onNewMessage); // сообщение придёт с сервера через сокет и попадёт в ф-цию\r\n\r\n    return () => socket.removeListener(\"SERVER:NEW_MESSAGE\", onNewMessage);\r\n  }, [currentDialogId]);\r\n\r\n  useEffect(() => {\r\n    messagesRef.current.scrollTo(0, messagesRef.current.scrollHeight); // при открытии диалога scroll будет всегда внизу (чтобы отобразить последние сообщения)\r\n  }, [items, isTyping]);\r\n\r\n  return (\r\n    <BaseMessages\r\n      blockRef={messagesRef}\r\n      items={items}\r\n      isLoading={isLoading}\r\n      user={user}\r\n      onRemoveMessage={removeMessageById}\r\n      blockHeight={blockHeight}\r\n      setPreviewImage={setPreviewImage}\r\n      previewImage={previewImage}\r\n      isTyping={isTyping}\r\n      partner={\r\n        !currentDialog ? null : user._id !== currentDialog.partner._id ? currentDialog.partner : currentDialog.author\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ messages, dialogs, user, attachments }) => ({\r\n    items: messages.items,\r\n    currentDialogId: dialogs.currentDialogId,\r\n    currentDialog: find(dialogs.items, { _id: dialogs.currentDialogId }),\r\n    isLoading: messages.isLoading,\r\n    user: user.data,\r\n    attachments: attachments.items\r\n  }),\r\n  messagesActions\r\n)(Messages);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport socket from \"../core/socket\";\r\n\r\nimport { messagesActions, attachmentsActions } from \"../redux/actions\";\r\nimport { filesApi } from \"../utils/api\";\r\nimport { ChatInput } from \"../components\";\r\n\r\nconst ChatInputContainer = ({\r\n  fetchSendMessage,\r\n  currentDialogId,\r\n  attachments,\r\n  setAttachments,\r\n  removeAttachment,\r\n  user\r\n}) => {\r\n  window.navigator.getUserMedia =\r\n    window.navigator.getUserMedia ||\r\n    window.navigator.mozGetUserMedia ||\r\n    window.navigator.msGetUserMedia ||\r\n    window.navigator.webkitGetUserMedia;\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const [emojiPickerVisible, setShowEmojiPicker] = useState(false);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const toggleEmojiPicker = () => {\r\n    setShowEmojiPicker(!emojiPickerVisible);\r\n  };\r\n\r\n  const addEmoji = ({ colons }) => {\r\n    setValue(`${value} ${colons}`.trim());\r\n  };\r\n\r\n  const handleSendMessage = e => {\r\n    socket.emit(\"DIALOGS:TYPING\", { dialogId: currentDialogId, user });\r\n\r\n    if (e.keyCode === 13) {\r\n      if (value || attachments.length) {\r\n        fetchSendMessage({\r\n          text: value,\r\n          dialogId: currentDialogId,\r\n          attachments: attachments.map(file => file.uid)\r\n        });\r\n        setValue(\"\");\r\n        setAttachments([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (isRecording) {\r\n      mediaRecorder.stop();\r\n    } else if (value || attachments.length) {\r\n      fetchSendMessage({\r\n        text: value,\r\n        dialogId: currentDialogId,\r\n        attachments: attachments.map(file => file.uid)\r\n      });\r\n      setValue(\"\");\r\n      setAttachments([]);\r\n    }\r\n  };\r\n\r\n  const onSelectFiles = async files => {\r\n    let uploaded = [];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i];\r\n\r\n      const uid = Math.round(Math.random() * 1000);\r\n\r\n      uploaded = [\r\n        ...uploaded,\r\n        {\r\n          uid,\r\n          name: file.name,\r\n          status: \"uploading\"\r\n        }\r\n      ];\r\n\r\n      setAttachments(uploaded);\r\n\r\n      await filesApi.upload(file).then(({ data }) => {\r\n        uploaded = uploaded.map(item => {\r\n          if (item.uid === uid) {\r\n            return {\r\n              status: \"done\",\r\n              uid: data.file._id,\r\n              name: data.file.filename,\r\n              url: data.file.url\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n      });\r\n    }\r\n\r\n    setAttachments(uploaded);\r\n  };\r\n\r\n  const onRecord = () => {\r\n    if (navigator.getUserMedia) {\r\n      navigator.getUserMedia({ audio: true }, onRecording, onError);\r\n    }\r\n  };\r\n\r\n  const onRecording = stream => {\r\n    const recorder = new MediaRecorder(stream);\r\n    setMediaRecorder(recorder);\r\n\r\n    recorder.start();\r\n\r\n    recorder.onstart = () => {\r\n      setIsRecording(true);\r\n    };\r\n\r\n    recorder.onstop = () => {\r\n      // сработает, когда вызовится mediaRecorder.stop(), следом выполнится событие ondataavailable\r\n      setIsRecording(false);\r\n    };\r\n\r\n    recorder.ondataavailable = e => {\r\n      const file = new File([e.data], \"audio.webm\");\r\n\r\n      setLoading(true);\r\n\r\n      filesApi.upload(file).then(({ data }) => {\r\n        sendAudio(data.file._id).then(() => {\r\n          setLoading(false);\r\n        });\r\n      });\r\n    };\r\n  };\r\n\r\n  const onError = err => {\r\n    console.log(\"The following error occured: \" + err);\r\n  };\r\n\r\n  const onHideRecording = () => {\r\n    setIsRecording(false);\r\n  };\r\n\r\n  const sendAudio = audioId => {\r\n    return fetchSendMessage({\r\n      text: null,\r\n      dialogId: currentDialogId,\r\n      attachments: [audioId]\r\n    });\r\n  };\r\n\r\n  return !currentDialogId ? null : (\r\n    <ChatInput\r\n      value={value}\r\n      setValue={setValue}\r\n      emojiPickerVisible={emojiPickerVisible}\r\n      toggleEmojiPicker={toggleEmojiPicker}\r\n      addEmoji={addEmoji}\r\n      handleSendMessage={handleSendMessage}\r\n      sendMessage={sendMessage}\r\n      attachments={attachments}\r\n      onSelectFiles={onSelectFiles}\r\n      onRecord={onRecord}\r\n      isRecording={isRecording}\r\n      onHideRecording={onHideRecording}\r\n      isLoading={isLoading}\r\n      removeAttachment={removeAttachment}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ dialogs, attachments, user }) => ({\r\n    currentDialogId: dialogs.currentDialogId,\r\n    attachments: attachments.items,\r\n    user: user.data\r\n  }),\r\n  { ...messagesActions, ...attachmentsActions }\r\n)(ChatInputContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Status } from \"../components\";\r\n\r\nconst StatusContainer = ({ currentDialogId, user, dialogs }) => {\r\n  if (!dialogs.length || !currentDialogId) {\r\n    return null;\r\n  }\r\n\r\n  const currentDialogObj = dialogs.filter(\r\n    dialog => dialog._id === currentDialogId\r\n  )[0];\r\n\r\n  let partner = {};\r\n\r\n  if (currentDialogObj.author._id === user._id) {\r\n    partner = currentDialogObj.partner;\r\n  } else {\r\n    partner = currentDialogObj.author;\r\n  }\r\n\r\n  return <Status online={partner.isOnline} fullname={partner.fullname} />;\r\n};\r\n\r\nexport default connect(({ dialogs, user }) => ({\r\n  dialogs: dialogs.items,\r\n  currentDialogId: dialogs.currentDialogId,\r\n  user: user.data\r\n}))(StatusContainer);\r\n","import React, { useState } from \"react\";\r\nimport { userApi, dialogsApi } from \"../utils/api\";\r\n\r\nimport { Sidebar } from \"../components\";\r\n\r\nconst SidebarContainer = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [messageText, setMessagaText] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedUserId, setSelectedUserId] = useState(false);\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onShow = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onSearch = value => {\r\n    setIsLoading(true);\r\n    userApi\r\n      .findUsers(value)\r\n      .then(({ data }) => {\r\n        setUsers(data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const onAddDialog = () => {\r\n    dialogsApi\r\n      .create({\r\n        partner: selectedUserId,\r\n        text: messageText\r\n      })\r\n      .then(() => {\r\n        onClose();\r\n        setInputValue(\"\");\r\n        setMessagaText(\"\");\r\n      })\r\n      .catch(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleChangeInput = value => {\r\n    setInputValue(value);\r\n  };\r\n\r\n  const onChangeTextArea = e => {\r\n    setMessagaText(e.target.value);\r\n  };\r\n  // onSelect выбирает значение из key у Option\r\n  const onSelectUser = userId => {\r\n    setSelectedUserId(userId);\r\n  };\r\n\r\n  return (\r\n    <Sidebar\r\n      inputValue={inputValue}\r\n      visible={visible}\r\n      isLoading={isLoading}\r\n      onClose={onClose}\r\n      onShow={onShow}\r\n      onSearch={onSearch}\r\n      onChangeInput={handleChangeInput}\r\n      onSelectUser={onSelectUser}\r\n      onModalOk={onAddDialog}\r\n      onChangeTextArea={onChangeTextArea}\r\n      messageText={messageText}\r\n      selectedUserId={selectedUserId}\r\n      users={users}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SidebarContainer;\r\n","import React from \"react\";\r\nimport { Icon, Button, Modal, Select, Input, Form } from \"antd\";\r\nimport { Dialogs } from \"../../containers\";\r\n\r\nimport \"./Sidebar.scss\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst Sidebar = ({\r\n  visible,\r\n  inputValue,\r\n  messageText,\r\n  selectedUserId,\r\n  isLoading,\r\n  users,\r\n  onShow,\r\n  onClose,\r\n  onSearch,\r\n  onChangeInput,\r\n  onSelectUser,\r\n  onChangeTextArea,\r\n  onModalOk\r\n}) => {\r\n  const options = users.map(user => (\r\n    <Option key={user._id}>{user.fullname}</Option>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"chat__sidebar\">\r\n      <div className=\"chat__sidebar-header\">\r\n        <div>\r\n          <Icon type=\"team\" />\r\n          <span>Список диалогов</span>\r\n        </div>\r\n        <Button onClick={onShow} type=\"link\" shape=\"circle\" icon=\"form\" />\r\n      </div>\r\n\r\n      <div className=\"chat__sidebar-dialogs\">\r\n        <Dialogs />\r\n      </div>\r\n      <Modal\r\n        title=\"Создать диалог\"\r\n        visible={visible}\r\n        onCancel={onClose}\r\n        footer={[\r\n          <Button key=\"back\" onClick={onClose}>\r\n            Закрыть\r\n          </Button>,\r\n          <Button\r\n            disabled={!messageText}\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            loading={isLoading}\r\n            onClick={onModalOk}\r\n          >\r\n            Создать\r\n          </Button>\r\n        ]}\r\n      >\r\n        <Form className=\"add-dialog-form\">\r\n          <Form.Item label=\"Введите имя пользователя или E-Mail\">\r\n            <Select\r\n              value={inputValue}\r\n              onSearch={onSearch}\r\n              onChange={onChangeInput}\r\n              onSelect={onSelectUser}\r\n              notFoundContent={null}\r\n              style={{ width: \"100%\" }}\r\n              defaultActiveFirstOption={false}\r\n              showArrow={false}\r\n              filterOption={false}\r\n              placeholder=\"Введите имя пользователя или почту\"\r\n              showSearch\r\n            >\r\n              {options}\r\n            </Select>\r\n          </Form.Item>\r\n          {selectedUserId && (\r\n            <Form.Item label=\"Введите текст сообщения\">\r\n              <TextArea\r\n                autosize={{ minRows: 3, maxRows: 10 }}\r\n                onChange={onChangeTextArea}\r\n                value={messageText}\r\n              />\r\n            </Form.Item>\r\n          )}\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Upload, Modal } from \"antd\";\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nconst UploadFiles = ({ attachments, removeAttachment }) => {\r\n  const [state, setState] = useState({\r\n    previewVisible: false,\r\n    previewImage: \"\",\r\n    fileList: attachments\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState({ ...state, fileList: attachments });\r\n  }, [attachments]);\r\n\r\n  const handleCancel = () => setState({ ...state, previewVisible: false });\r\n\r\n  const handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true\r\n    });\r\n  };\r\n\r\n  const handleChange = ({ fileList }) => setState({ ...state, fileList });\r\n\r\n  return (\r\n    <div className=\"clearfix\">\r\n      <Upload\r\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n        listType=\"picture-card\"\r\n        fileList={state.fileList}\r\n        onPreview={handlePreview}\r\n        onChange={handleChange}\r\n        onRemove={file => removeAttachment(file)}\r\n      ></Upload>\r\n      <Modal\r\n        visible={state.previewVisible}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n      >\r\n        <img alt=\"example\" style={{ width: \"100%\" }} src={state.previewImage} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFiles;\r\n","import React from \"react\";\r\nimport { Form, Icon, Input } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button, Block } from \"../../../components\";\r\nimport { validateField } from \"../../../utils/helpers\";\r\n\r\nconst LoginForm = props => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isSubmitting\r\n  } = props;\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"auth__top\">\r\n        <h2>Войти в аккаунт</h2>\r\n        <p>Пожалуйста войдите в свой аккаунт</p>\r\n      </div>\r\n      <Block>\r\n        <Form onSubmit={handleSubmit} className=\"login-form\">\r\n          <Form.Item\r\n            /* hasFeedback отображает иконку в зависимости от validateStatus значения */\r\n            validateStatus={validateField(\"email\", touched, errors)}\r\n            help={!touched.email ? \"\" : errors.email}\r\n            hasFeedback\r\n          >\r\n            <Input\r\n              id=\"email\"\r\n              prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              size=\"large\"\r\n              placeholder=\"E-Mail\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={validateField(\"password\", touched, errors)}\r\n            help={!touched.password ? \"\" : errors.password}\r\n            hasFeedback\r\n          >\r\n            <Input\r\n              id=\"password\"\r\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              size=\"large\"\r\n              type=\"password\"\r\n              placeholder=\"Пароль\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button htmlType=\"submit\" disabled={isSubmitting} type=\"primary\" size=\"large\">\r\n              Войти в аккаунт\r\n            </Button>\r\n          </Form.Item>\r\n          <Link className=\"auth__register-link\" to=\"/register\">\r\n            Зарегистрироваться\r\n          </Link>\r\n        </Form>\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","export default ({ isAuth, values, errors }) => {\r\n  const rules = {\r\n    email: value => {\r\n      if (!value) {\r\n        errors.email = \"Введите E-Mail\";\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        errors.email = \"Неверный E-Mail\";\r\n      }\r\n    },\r\n    password: value => {\r\n      if (!value) {\r\n        errors.password = \"Введите пароль\";\r\n      } else if (\r\n        // если это не авторизация\r\n        !isAuth &&\r\n        // и пароль не совпадает регулярке. в пароле должна быть как минимум маленькая, большая буква eng, цифра и длина > 8\r\n        !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/.test(value)\r\n      ) {\r\n        errors.password = \"Слишком лёгкий пароль\";\r\n      }\r\n    },\r\n    password_2: value => {\r\n      if (!isAuth && value !== values.password) {\r\n        errors.password_2 = \"Пароли не совпадают\";\r\n      } else if (!value) {\r\n        errors.password_2 = \"Введите пароль\";\r\n      }\r\n    },\r\n    fullname: value => {\r\n      if (!isAuth && !value) {\r\n        errors.fullname = \"Укажите свое имя и фамилию\";\r\n      }\r\n    }\r\n  };\r\n  // values - это объект из Formik, в кот. содержится имена(id) input-ов формы, типо email, password\r\n  Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\r\n};\r\n","import { withFormik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport validateForm from \"../../../utils/validate\";\r\nimport { userActions } from \"../../../redux/actions\";\r\n\r\nconst LoginFormContainer = withFormik({\r\n  // пустые поля нужны для того чтобы когда делаем фокус на input-e, чтобы выскачила ошибка, без пустых полей будет как success\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n    password: \"\"\r\n  }),\r\n\r\n  validate: values => {\r\n    let errors = {};\r\n    validateForm({ isAuth: true, values, errors });\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, { setSubmitting, props }) => {\r\n    const { fetchUserLogin } = props;\r\n\r\n    fetchUserLogin(values)\r\n      .then(({status}) => {\r\n        if(status === 'success') {\r\n          props.history.push(\"/\");\r\n        }\r\n        setSubmitting(false);\r\n      })\r\n      .catch(() => {\r\n        setSubmitting(false);\r\n      });\r\n  },\r\n\r\n  displayName: \"LoginForm\"\r\n})(LoginForm);\r\n\r\nexport default connect(\r\n  null,\r\n  userActions\r\n)(LoginFormContainer);\r\n","import React from \"react\";\r\nimport { Form, Icon } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button, Block, FormField } from \"../../../components\";\r\n\r\nconst success = false; // если регистрация не прошла то компонента не отрисуется\r\n\r\nconst RegisterForm = props => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isSubmitting\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"auth__top\">\r\n        <h2>Регистрация</h2>\r\n        <p>Для входа в чат, вам нужно зарегистрироваться</p>\r\n      </div>\r\n      <Block>\r\n        {!success ? (\r\n          <Form onSubmit={handleSubmit} className=\"login-form\">\r\n            <FormField\r\n              name=\"email\"\r\n              icon=\"mail\"\r\n              placeholder=\"E-Mail\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n            <FormField\r\n              name=\"fullname\"\r\n              icon=\"user\"\r\n              placeholder=\"Ваше имя и фамилия\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n            <FormField\r\n              name=\"password\"\r\n              icon=\"lock\"\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n            <FormField\r\n              name=\"password_2\"\r\n              icon=\"lock\"\r\n              placeholder=\"Повторите пароль\"\r\n              type=\"password\"\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n            />\r\n            <Form.Item>\r\n              <Button\r\n                htmlType=\"submit\"\r\n                disabled={isSubmitting}\r\n                type=\"primary\"\r\n                size=\"large\"\r\n              >\r\n                Зарегистрироваться\r\n              </Button>\r\n            </Form.Item>\r\n            <Link className=\"auth__register-link\" to=\"/login\">\r\n              Войти в аккаунт\r\n            </Link>\r\n          </Form>\r\n        ) : (\r\n          <div className=\"auth__success-block\">\r\n            <div>\r\n              <Icon type=\"info-circle\" theme=\"twoTone\" />\r\n            </div>\r\n            <h2>Подтвердите свой аккаунт</h2>\r\n            <p>\r\n              На вашу почту отправлено письмо с сылкой на подтверждение аккаунта\r\n            </p>\r\n          </div>\r\n        )}\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { withFormik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport RegisterForm from \"../components/RegisterForm\";\r\nimport validateForm from \"../../../utils/validate\";\r\nimport { userActions } from \"../../../redux/actions\";\r\nimport { openNotification } from \"../../../utils/helpers\";\r\n\r\nconst RegisterFormContainer = withFormik({\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n    fullname: \"\",\r\n    password: \"\",\r\n    password_2: \"\"\r\n  }),\r\n  validate: values => {\r\n    let errors = {};\r\n    validateForm({ isAuth: false, values, errors });\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, { setSubmitting, props }) => {\r\n    const { fetchUserRegister } = props;\r\n\r\n    fetchUserRegister(values)\r\n      .then(({ status }) => {\r\n        if (status === \"success\") {\r\n          openNotification({\r\n            title: \"Отлично!\",\r\n            text: \"Регистрация успешна.\",\r\n            type: \"success\"\r\n          });\r\n\r\n          props.history.push(\"/register/verify\");\r\n        }\r\n\r\n        setSubmitting(false);\r\n      })\r\n      .catch(() => {\r\n        setSubmitting(false);\r\n      });\r\n  },\r\n\r\n  displayName: \"RegisterForm\"\r\n})(RegisterForm);\r\n\r\nexport default connect(\r\n  null,\r\n  userActions\r\n)(RegisterFormContainer);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Result, Button, Spin } from \"antd\";\r\n\r\nimport { userApi } from \"../../../utils/api\";\r\nimport { Block } from \"../../../components\";\r\n\r\nconst renderTextInfo = (hash, verified) => {\r\n  if (hash) {\r\n    if (verified) {\r\n      return {\r\n        status: \"success\",\r\n        message: \"Аккаунт успешно подтвержден!\"\r\n      };\r\n    } else {\r\n      return {\r\n        status: \"loading\",\r\n        message: \"Загрузка...\"\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      status: \"success\",\r\n      message: \"Ссылка с подтверждением аккаунта отправлена на E-Mail.\"\r\n    };\r\n  }\r\n};\r\n\r\nconst CheckEmailInfo = ({ location, history }, props) => {\r\n  const [verified, setVerified] = useState(false);\r\n  const hash = location.search.split(\"hash=\")[1]; // из url достаём hash \"http://localhost:3000/register/verify?hash=$2b$10$jZiwNqv2cCtznSfemPw//OyyRtOD.na48yvJZtEKvVLvxBMcBPuDW\"\r\n  const info = renderTextInfo(hash, verified);\r\n\r\n  useEffect(() => {\r\n    if (hash) {\r\n      userApi.verifyHash(hash).then(({ data }) => {\r\n        if (data.status === \"success\") {\r\n          setVerified(true);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Block>\r\n        {info.status === \"loading\" ? (\r\n          <div style={{display: 'flex', justifyContent: 'center'}}>\r\n            <Spin size=\"large\" tip={info.message}/>\r\n          </div>\r\n        ) : (\r\n          <Result\r\n            status={info.status}\r\n            title={info.status === \"success\" ? \"Готово!\" : \"Ошибка\"}\r\n            subTitle={info.message}\r\n            extra={\r\n              info.status === \"success\" &&\r\n              verified && (\r\n                <Button type=\"primary\" onClick={() => history.push(\"/login\")}>\r\n                  Войти\r\n                </Button>\r\n              )\r\n            }\r\n          />\r\n        )}\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckEmailInfo;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport { LoginForm, RegisterForm } from '../../modules';\r\nimport CheckEmailInfo from \"./components/CheckEmailInfo\";\r\n\r\nimport './Auth.scss';\r\n\r\nclass Auth extends React.Component {\r\n    render() {\r\n        return (\r\n            <section className=\"auth\">\r\n                <div className=\"auth__content\">\r\n                    <Route exact path={['/', '/login']} component={LoginForm} />\r\n                    <Route exact path='/register' component={RegisterForm} />\r\n                    <Route exact path=\"/register/verify\" component={CheckEmailInfo} />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth;\r\n","import React, { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { Empty } from \"antd\";\r\n\r\nimport { Messages, ChatInput, Status, Sidebar } from \"../../containers\";\r\nimport { dialogsActions } from \"../../redux/actions\";\r\n\r\nimport \"./Home.scss\";\r\n\r\nconst Home = props => {\r\n  const { setCurrentDialogId, currentDialogId, user } = props;\r\n\r\n  useEffect(() => {\r\n    const { pathname } = props.location;\r\n    const dialogId = pathname.split(\"/\").pop();\r\n    setCurrentDialogId(dialogId);\r\n  }, [props.location.pathname]);\r\n\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"chat\">\r\n        <Sidebar />\r\n        {user && (\r\n          <div className=\"chat__dialog\">\r\n            <Status />\r\n\r\n            {!currentDialogId ? (\r\n              <div className=\"chat__dialog-messages\">\r\n                <Empty description=\"Откройте диалог\" />\r\n              </div>\r\n            ) : (\r\n              <Messages/>\r\n            )}\r\n\r\n            <div className=\"chat__dialog-input\">\r\n              <ChatInput />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    ({ user, dialogs }) => ({\r\n      user: user.data,\r\n      currentDialogId: dialogs.currentDialogId,\r\n    }),\r\n    dialogsActions\r\n  ),\r\n  withRouter\r\n)(Home);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nimport { Auth, Home } from \"./pages\";\r\n\r\nconst App = ({ isAuth }) => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={[\"/login\", \"/register\", \"/register/verify\"]}\r\n          component={Auth}\r\n        />\r\n        <Route\r\n          path=\"/\"\r\n          render={() => (isAuth ? <Home /> : <Redirect to=\"/login\" />)}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(({ user }) => ({ isAuth: user.isAuth }))(App);\r\n","const initialState = {\r\n  items: [],\r\n  currentDialogId: window.location.pathname.split(\"dialog/\")[1],\r\n  isLoading: false\r\n};\r\n// { type, payload } - деструктуризация action\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"DIALOGS:SET_ITEMS\":\r\n      return {\r\n        ...state,\r\n        items: payload\r\n      };\r\n    case \"DIALOGS:SET_CURRENT_DIALOG_ID\":\r\n      return {\r\n        ...state,\r\n        currentDialogId: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  items: [],\r\n  isLoading: false\r\n};\r\n// { type, payload } - деструктуризация action\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"MESSAGES:ADD_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        items: [...state.items, payload]\r\n      };\r\n    case \"MESSAGES:SET_ITEMS\":\r\n      return {\r\n        ...state,\r\n        items: payload,\r\n        isLoading: false\r\n      };\r\n    case 'MESSAGES:REMOVE_MESSAGE':\r\n        return {\r\n          ...state,\r\n          items: state.items.filter(message => message._id !== payload),\r\n      };\r\n    case \"MESSAGES:SET_IS_LOADING\":\r\n      return {\r\n        ...state,\r\n        isLoading: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  data: null,\r\n  token: window.localStorage.token,\r\n  isAuth: !!window.localStorage.token\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"USER:SET_DATA\":\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n        token: window.localStorage.token,\r\n        isAuth: true\r\n      };\r\n    case \"USER:SET_IS_AUTH\":\r\n      return {\r\n        ...state,\r\n        isAuth: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  items: []\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"ATTACHMENTS:SET_ITEMS\":\r\n      return {\r\n        ...state,\r\n        items: payload\r\n      };\r\n    case \"ATTACHMENTS:REMOVE_ITEM\":\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.uid !== payload.uid)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport dialogs from \"./dialogs\";\r\nimport messages from \"./messages\";\r\nimport user from \"./user\";\r\nimport attachments from \"./attachments\";\r\n\r\nexport default combineReducers({\r\n  dialogs,\r\n  messages,\r\n  user,\r\n  attachments\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middlewares = [thunkMiddleware];\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport { userActions } from \"./redux/actions\";\r\n\r\nimport store from './redux/store';\r\n\r\nimport \"./styles/index.scss\"; // библиотеки antd, в самом файле происходит подключение, кот. будет доступно всем компонентам\r\nimport 'emoji-mart/css/emoji-mart.css';\r\n\r\nstore.dispatch(userActions.fetchUserData());\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}